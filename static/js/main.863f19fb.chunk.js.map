{"version":3,"sources":["libs.js","config.js","gapi.js","comps/Layout/styled.js","comps/PanelDate/index.js","comps/PanelWeight/styled.js","comps/ButtonAuth/index.js","comps/PanelWeight/index.js","comps/Dashboard/styled.js","comps/Dashboard/index.js","comps/Graph/childcomps.js","comps/Graph/index.js","comps/Layout/index.js","comps/App/index.js","index.js"],"names":["convertDate","date","moment","convertData","row","Object","objectSpread","timestamp","unix","dmoment","weight","exercise","measure","neck","chest","waist","hip","sleeve","getAccessToken","auth","JSON","parse","localStorage","getItem","get","returnOutput","silent","resp","Error","Modal","error","title","content","message","data","undefined","isError","errMsg","silentOutput","output","findSameDate","find","_ref","isSame","cleanAndPairData","header","index","rowId","zipObject","gconf","project","gapi","tokenInfo","publicCsv","concat","getSheets","updateSheets","axiosWithAuth","url","method","arguments","length","axios","headers","Authorization","Content-Type","fetchTokenInfo","then","catch","fetchData","_ref5","asyncToGenerator","regenerator_default","a","mark","_callee","isLogin","wrap","_context","prev","next","_ref2","_ref3","_ref3$values","values","_ref3$values2","toArray","_ref3$values2$","slice","map","t0","sent","_ref4","csv","_csv$split","split","_csv$split2","headerRaw","dataRaw","trim","raw","sortBy","filter","_ref6","_ref6$weight","abrupt","stop","_x","apply","this","updateOrCreateRow","form","selectedDate","valueInputOption","range","majorDimension","format","toConsumableArray","pick","_ref8","Content","Layout","Sider","Logo","styled","div","_templateObject","MainLayout","_templateObject2","MainSider","attrs","width","_templateObject3","MainContent","_templateObject4","Panel","_templateObject5","DividerTop","Divider","orientation","_templateObject6","dateCellRender","dateRender","react_default","createElement","es_row","type","gutter","justify","badge","status","color","PanelDate","selectDate","calendar","fullscreen","value","onSelect","RowPanel","Row","styled_templateObject","ColLabel","Col","span","styled_templateObject2","ColSlider","styled_templateObject3","RowSave","styled_templateObject4","ButtonAuth","refetchAuth","refetchData","_useState","useState","_useState2","slicedToArray","loading","setLoading","loginSuccess","setItem","stringify","success","saveData","_callee2","_context2","info","es_button","onClick","icon","google_login","clientId","buttonText","onRequest","onSuccess","onFailure","scope","cookiePolicy","render","renderProps","defaultProps","PanelWeight","props","setValue","label","bypass","getValue","useEffect","formValue","each","keys","Fragment","slider","min","max","step","onChange","col","input_number","formatter","n","parser","replace","es_switch","checkedChildren","unCheckedChildren","checked","v","key","capitalize","comps_ButtonAuth","assign","_","chain","fromPairs","IconGreen","Icon","style","Dashboard_styled_templateObject","StatisticBlue","Statistic","valueStyle","Dashboard_styled_templateObject2","Dashboard","spinning","firstWeight","first","currentWeight","last","lossWeight","tagetLossWeight","goal","Math","abs","ts7dAgo","endOf","subtract","last7dExercise","sumBy","ts","ex","lossWeightIcon","card","precision","prefix","suffix","AxisTickRotate","x","y","payload","transform","dy","textAnchor","fill","MeasureDot","cx","cy","r","strokeWidth","stroke","domain","isFinite","round","tooltipsFormatter","Graph","marginTop","es6","height","activeLabel","strokeDasharray","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","verticalAlign","dataKey","tick","childcomps_AxisTickRotate","yAxisId","angle","position","dot","childcomps_MeasureDot","barSize","layout","comps_Dashboard","comps_Graph","href","target","comps_PanelDate","comps_PanelWeight","App","state","_ref2$data","_ref2$data$expires_in","expires_in","_this","setState","_ref4$data","componentDidMount","_callee3","_context3","spin","tip","comps_Layout","React","Component","ReactDOM","comps_App","document","getElementById"],"mappings":"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","file":"static/js/main.863f19fb.chunk.js","sourcesContent":["import moment from 'moment'\r\nimport { find, get, zipObject } from 'lodash'\r\nimport { Modal } from 'antd'\r\n\r\nexport const convertDate = date => (\r\n  moment(date, \"YYYY-MM-DD\")\r\n)\r\n\r\nexport const convertData = row => ({\r\n  ...row,\r\n  timestamp: convertDate(row.date).unix(),\r\n  dmoment: convertDate(row.date),\r\n  weight: +(row.weight || 0),\r\n  exercise: +(row.exercise || 0),\r\n  measure: row.measure === \"TRUE\",\r\n  neck: +(row.neck || 0),\r\n  chest: +(row.chest || 0),\r\n  waist: +(row.waist || 0),\r\n  hip: +(row.hip || 0),\r\n  sleeve: +(row.sleeve || 0)\r\n})\r\n\r\nexport const getAccessToken = () => {\r\n  const auth = JSON.parse(localStorage.getItem('auth'))\r\n  return get(auth, 'tokenObj.access_token', '')\r\n}\r\n\r\nconst returnOutput = silent => resp => {\r\n  if (resp instanceof Error) {\r\n    if(!silent){\r\n      Modal.error({ title: 'Connection Error', content: resp.message})\r\n    }\r\n    return { data: undefined, isError: true, errMsg: resp.message }\r\n  }\r\n  return { data: resp, isError: false, errMsg: undefined }\r\n}\r\n\r\nexport const silentOutput = returnOutput(true)\r\nexport const output = returnOutput(false)\r\n\r\nexport const findSameDate = (\r\n  (data, date) => find(data, ({ dmoment }) => dmoment.isSame(date, 'day'))\r\n)\r\n\r\nexport const cleanAndPairData = header => (row, index) => (\r\n  { rowId: index+2, ...zipObject(header, row)}\r\n)","export const gconf = {\r\n  clientId: '868583526084-jg9plqb23mjf393qdegg1aa0gq0tf8j4.apps.googleusercontent.com',\r\n  scope: 'https://www.googleapis.com/auth/spreadsheets',\r\n  sheetID: '1btCR4YSDxAElxE_IdhhuEcwyr5vFDIcV48Il37NiQLQ'\r\n}\r\n\r\nexport const project = {\r\n  projectName: 'JTxBody',\r\n  goalWeight: 70,\r\n  givenName: 'Jaynarol',\r\n  githubRepo: 'https://github.com/Jaynarol/jtxbody',\r\n  facebookLink: 'https://fb.com/akkaradech.sr'\r\n}","import axios from 'axios'\r\nimport { pick, sortBy, values } from 'lodash'\r\nimport { cleanAndPairData, convertData, findSameDate, getAccessToken, output, silentOutput } from './libs'\r\nimport { gconf } from './config'\r\n\r\nconst gapi = {\r\n  tokenInfo: 'https://www.googleapis.com/oauth2/v3/tokeninfo',\r\n  publicCsv: `https://docs.google.com/spreadsheets/d/${gconf.sheetID}/pub?gid=0&single=true&output=csv`,\r\n  getSheets: `https://sheets.googleapis.com/v4/spreadsheets/${gconf.sheetID}/values/A1:I100000`,\r\n  updateSheets: `https://sheets.googleapis.com/v4/spreadsheets/${gconf.sheetID}/values:batchUpdate`\r\n}\r\n\r\nconst axiosWithAuth = (url, method = 'GET', data = {}) => axios({\r\n  url, method, data,\r\n  headers: {\r\n    'Authorization': `Bearer ${getAccessToken()}`,\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\nexport const fetchTokenInfo = () => (\r\n  axiosWithAuth(gapi.tokenInfo)\r\n    .then(({ data }) => data)\r\n    .then(output).catch(silentOutput)\r\n)\r\n\r\nconst fetchDataWithAuth = () => (\r\n  axiosWithAuth(gapi.getSheets)\r\n    .then(({ data }) => data)\r\n    .then(({ values: [header = [], ...rows] = [] }) =>(\r\n      rows\r\n        .map(cleanAndPairData(header))\r\n        .map(convertData)\r\n    ))\r\n    .then(output).catch(output)\r\n)\r\n\r\nconst fetchDataWithPublic = () => (\r\n  axios.get(gapi.publicCsv)\r\n    .then(({ data }) => data)\r\n    .then(csv => {\r\n      const [headerRaw, ...dataRaw] = csv.split('\\n')\r\n      const header = headerRaw.trim().split(',')\r\n      return dataRaw\r\n        .map(raw => raw.trim().split(','))\r\n        .map(cleanAndPairData(header))\r\n        .map(convertData)\r\n    })\r\n    .then(output).catch(output)\r\n)\r\n\r\nexport const fetchData = async isLogin => {\r\n  const resp = isLogin\r\n    ? await fetchDataWithAuth()\r\n    : await fetchDataWithPublic()\r\n\r\n  const data = sortBy(resp.data, ['timestamp'])\r\n    .filter(({ weight = 0 }) => weight > 0)\r\n\r\n  return { ...resp, data }\r\n}\r\n\r\nexport const updateOrCreateRow = (data, form, selectedDate) => {\r\n  const { rowId } = findSameDate(data, selectedDate) || { rowId: data.length + 2 }\r\n  return axiosWithAuth(gapi.updateSheets, 'POST', {\r\n    valueInputOption: 'USER_ENTERED',\r\n    data: [{\r\n      range: `A${rowId}`,\r\n      majorDimension: 'ROWS',\r\n      values: [[\r\n        selectedDate.format('YYYY-MM-DD'),\r\n        ...values(pick(form, ['weight', 'exercise', 'measure', 'neck', 'chest', 'waist', 'hip', 'sleeve']))\r\n      ]]\r\n    }]\r\n  })\r\n    .then(({ data }) => data)\r\n    .then(output).catch(output)\r\n}","import styled from 'styled-components'\r\nimport { Divider, Layout } from 'antd'\r\n\r\nconst { Content, Sider } = Layout\r\n\r\nexport const Logo = styled.div`\r\n  height: 32px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  margin: 16px;\r\n  font-size: 1.5em;\r\n  color: lightgray;\r\n  text-align: center;\r\n`\r\n\r\nexport const MainLayout = styled(Layout)`\r\n  min-height: 100vh;\r\n`\r\n\r\nexport const MainSider = styled(Sider).attrs(() => ({\r\n  width: 320\r\n}))`\r\n  min-height: 100vh;\r\n`\r\n\r\nexport const MainContent = styled(Content)`\r\n  margin: 16px;\r\n`\r\n\r\nexport const Panel = styled.div`\r\n  width: 288px;\r\n  margin: 16px;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 4px;\r\n  background-color: #EEE;\r\n`\r\n\r\nexport const DividerTop = styled(Divider).attrs(() => ({\r\n  orientation: 'center'\r\n}))`\r\n  margin: 20px 0 10px!important;\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Badge, Calendar, Row } from 'antd'\r\nimport { findSameDate } from '../../libs'\r\n\r\nconst dateCellRender = data => dateRender => {\r\n  const date = findSameDate(data, dateRender)\r\n  if(date){\r\n    return <Row type=\"flex\" gutter={0} justify=\"center\">\r\n      {\r\n        date.exercise > 0\r\n          ? <Badge status=\"processing\" />\r\n          : date.weight > 0 && <Badge color=\"cadetblue\" />\r\n      }\r\n      {\r\n        date.measure && <Badge status=\"success\" />\r\n      }\r\n    </Row>\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst PanelDate = ({ selectDate, selectedDate, data }) => {\r\n\r\n  return (\r\n    <Calendar\r\n      fullscreen={false}\r\n      value={selectedDate}\r\n      onSelect={selectDate}\r\n      dateCellRender={dateCellRender(data)}\r\n    />\r\n  )\r\n}\r\n\r\nPanelDate.propTypes = {\r\n  selectDate: PropTypes.func.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  selectedDate: PropTypes.objectOf(PropTypes.any).isRequired\r\n}\r\n\r\nexport default PanelDate","import styled from 'styled-components'\r\nimport { Col, Row } from 'antd'\r\n\r\nexport const RowPanel = styled(Row).attrs(() => ({\r\n  type: 'flex',\r\n  justify: 'space-around'\r\n}))`\r\n  align-items: center;\r\n  height: 36px;\r\n`\r\n\r\nexport const ColLabel = styled(Col).attrs(() => ({\r\n  span: 8\r\n}))`\r\n  text-align: right;\r\n  padding-right: 10px!important;\r\n`\r\n\r\nexport const ColSlider = styled(Col).attrs(() => ({\r\n  span: 8\r\n}))`\r\n  padding-right: 10px!important;\r\n`\r\n\r\nexport const RowSave = styled(Row)`\r\n  margin: 20px;\r\n`","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { pick, get } from 'lodash'\r\nimport { GoogleLogin } from 'react-google-login'\r\nimport { Button, Modal, message } from 'antd'\r\nimport { updateOrCreateRow } from '../../gapi'\r\nimport { gconf, project } from '../../config'\r\n\r\n\r\nconst ButtonAuth = ({ refetchAuth, refetchData, form, data, selectedDate, isLogin }) => {\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const loginSuccess = async resp => {\r\n    const givenName = get(resp, 'profileObj.givenName')\r\n    if(givenName === project.givenName){\r\n      localStorage.setItem('auth', JSON.stringify(pick(resp, ['profileObj', 'tokenObj'])))\r\n      await refetchAuth()\r\n      message.success(`Welcome back ${project.givenName}.`)\r\n    }else{\r\n      Modal.error({ title: 'Permission Denied', content: `I'm glad to hear that you are interested, But This area for ${project.givenName} only.`})\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const saveData = async () => {\r\n    setLoading(true)\r\n    const { isError } = await updateOrCreateRow(data, form, selectedDate)\r\n    if(isError){\r\n      await refetchAuth()\r\n      message.info('Session timeout.')\r\n    }else{\r\n      await refetchData()\r\n      message.success('Data successfully saved.')\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  return isLogin\r\n    ? <Button loading={loading} onClick={saveData} icon=\"save\">Save</Button>\r\n    : <GoogleLogin\r\n      clientId={gconf.clientId}\r\n      buttonText=\"Login\"\r\n      onRequest={() => setLoading(true)}\r\n      onSuccess={loginSuccess}\r\n      onFailure={() => setLoading(false)}\r\n      scope={gconf.scope}\r\n      cookiePolicy={'single_host_origin'}\r\n      render={renderProps => (\r\n        <Button onClick={renderProps.onClick} loading={loading} icon=\"google\">Login</Button>\r\n      )}\r\n    />\r\n}\r\n\r\nButtonAuth.propTypes = {\r\n  refetchAuth: PropTypes.func.isRequired,\r\n  refetchData: PropTypes.func.isRequired,\r\n  form: PropTypes.objectOf(PropTypes.any).isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  selectedDate: PropTypes.objectOf(PropTypes.any).isRequired,\r\n  isLogin: PropTypes.bool\r\n}\r\n\r\nButtonAuth.defaultProps = {\r\n  isLogin: false\r\n}\r\n\r\nexport default ButtonAuth\r\n","/* eslint-disable newline-per-chained-call */\r\nimport React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _, { each, capitalize, keys } from 'lodash'\r\nimport { ColLabel, ColSlider, RowPanel, RowSave } from './styled'\r\nimport { Col, InputNumber, Slider, Switch } from 'antd'\r\nimport ButtonAuth from '../ButtonAuth'\r\nimport { findSameDate } from '../../libs'\r\n\r\nconst PanelWeight = props => {\r\n  const { isLogin, selectedDate, data } = props\r\n  const form = {\r\n    weight: useState(0),\r\n    exercise: useState(0),\r\n    measure: useState(false),\r\n    neck: useState(0),\r\n    chest: useState(0),\r\n    waist: useState(0),\r\n    hip: useState(0),\r\n    sleeve: useState(0)\r\n  }\r\n  const setValue = (label, bypass = false) => value => (isLogin || bypass) && form[label][1](value)\r\n  const getValue = label => form[label][0]\r\n  const getForm = () => _(form).keys().chain().map(label => ([label, getValue(label)])).fromPairs().value()\r\n\r\n  useEffect(() => {\r\n    const formValue = findSameDate(data, selectedDate)\r\n    each(keys(form), label => setValue(label, true)(label === 'measure' ? false : 0))\r\n    if(formValue){\r\n      each(keys(form), label => setValue(label, true)(formValue[label]))\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate, data])\r\n\r\n  return (\r\n    <>\r\n      <RowPanel>\r\n        <ColLabel>Weight:</ColLabel>\r\n        <ColSlider>\r\n          <Slider min={0} max={120} step={0.1} onChange={setValue('weight')} value={getValue('weight')} />\r\n        </ColSlider>\r\n        <Col span={8}>\r\n          <InputNumber\r\n            onChange={setValue('weight')}\r\n            formatter={n => `${n} kg`}\r\n            parser={n => n.replace(/[^0-9.]/g, '')}\r\n            min={0} max={120} step={0.1} value={getValue('weight')}\r\n          />\r\n        </Col>\r\n      </RowPanel>\r\n\r\n      <RowPanel>\r\n        <ColLabel>Exercise:</ColLabel>\r\n        <ColSlider>\r\n          <Slider min={0} max={120} step={5} onChange={setValue('exercise')} value={getValue('exercise')}  />\r\n        </ColSlider>\r\n        <Col span={8}>\r\n          <InputNumber\r\n            onChange={setValue('exercise')}\r\n            formatter={n => `${n} mins`}\r\n            parser={n => n.replace(/[^0-9.]/g, '')}\r\n            min={0} max={120} step={5} value={getValue('exercise')}\r\n          />\r\n        </Col>\r\n      </RowPanel>\r\n\r\n      <RowPanel>\r\n        <ColLabel>Measure:</ColLabel>\r\n        <Col span={16}>\r\n          <Switch\r\n            checkedChildren=\"Yes\"\r\n            unCheckedChildren=\"No\"\r\n            checked={getValue('measure')}\r\n            onChange={setValue('measure')}\r\n          />\r\n        </Col>\r\n      </RowPanel>\r\n\r\n      {\r\n        getValue('measure') &&\r\n        ['neck', 'chest', 'waist', 'hip', 'sleeve'].map(v => (\r\n          <RowPanel key={v}>\r\n            <ColLabel>{capitalize(v)}:</ColLabel>\r\n            <ColSlider>\r\n              <Slider min={0} max={60} step={0.1} onChange={setValue(v)} value={getValue(v)}  />\r\n            </ColSlider>\r\n            <Col span={8}>\r\n              <InputNumber\r\n                onChange={setValue(v)}\r\n                formatter={n => `${n}\"`}\r\n                parser={n => n.replace(/[^0-9.]/g, '')}\r\n                min={0} max={60} step={0.1} value={getValue(v)}\r\n              />\r\n            </Col>\r\n          </RowPanel>\r\n        ))\r\n      }\r\n\r\n      <RowSave>\r\n        <ColLabel />\r\n        <Col span={16}>\r\n          <ButtonAuth form={getForm()} isLogin={isLogin} {...props} />\r\n        </Col>\r\n      </RowSave>\r\n    </>\r\n  )\r\n}\r\n\r\nPanelWeight.propTypes = {\r\n  isLogin: PropTypes.bool,\r\n  selectedDate: PropTypes.objectOf(PropTypes.any).isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.any).isRequired\r\n}\r\n\r\nPanelWeight.defaultProps = {\r\n  isLogin: false\r\n}\r\n\r\nexport default PanelWeight","import styled from 'styled-components'\r\nimport { Icon, Statistic } from 'antd'\r\n\r\nexport const IconGreen = styled(Icon).attrs(() => ({\r\n  style: { color: 'darkseagreen' }\r\n}))``\r\n\r\nexport const StatisticBlue = styled(Statistic).attrs(() => ({\r\n  valueStyle: { color: '#1890ff' }\r\n}))``","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\nimport { Card, Col, Row } from 'antd'\r\nimport { get, last, first, sumBy } from 'lodash'\r\nimport { project } from '../../config'\r\nimport { IconGreen, StatisticBlue } from './styled'\r\n\r\nconst Dashboard = ({ spinning, data }) => {\r\n\r\n  const firstWeight = get(first(data), 'weight', 0)\r\n  const currentWeight = get(last(data), 'weight', 0)\r\n  const lossWeight = currentWeight - firstWeight\r\n  const tagetLossWeight = firstWeight - project.goalWeight\r\n  const goal = Math.abs(lossWeight) / tagetLossWeight * 100\r\n  const ts7dAgo = moment().endOf('day').subtract(7, 'days').unix()\r\n  const last7dExercise = sumBy(data, ({ timestamp: ts, exercise: ex }) => ts > ts7dAgo ? ex : 0 )\r\n  const lossWeightIcon = `caret-${lossWeight <= 0 ? 'down' : 'up'}`\r\n\r\n  return (\r\n    <Row gutter={16}>\r\n\r\n      <Col span={6}>\r\n        <Card loading={spinning} >\r\n          <StatisticBlue\r\n            title=\"Current Weight\"\r\n            value={currentWeight}\r\n            precision={2}\r\n            prefix={<IconGreen type=\"more\" />}\r\n            suffix=\"kg\"\r\n          />\r\n        </Card>\r\n      </Col>\r\n\r\n      <Col span={6}>\r\n        <Card loading={spinning} >\r\n          <StatisticBlue\r\n            title=\"Weight Loss\"\r\n            value={lossWeight}\r\n            precision={2}\r\n            prefix={<IconGreen type={lossWeightIcon} />}\r\n            suffix=\"kg\"\r\n          />\r\n        </Card>\r\n      </Col>\r\n\r\n      <Col span={6}>\r\n        <Card loading={spinning} >\r\n          <StatisticBlue\r\n            title=\"Reach my Goal\"\r\n            value={goal}\r\n            precision={2}\r\n            prefix={<IconGreen type=\"ant-design\" />}\r\n            suffix=\"%\"\r\n          />\r\n        </Card>\r\n      </Col>\r\n\r\n      <Col span={6}>\r\n        <Card loading={spinning} >\r\n          <StatisticBlue\r\n            title=\"Last 7d Exercise\"\r\n            value={last7dExercise}\r\n            prefix={<IconGreen type=\"heart\" />}\r\n            suffix=\" mins\"\r\n          />\r\n        </Card>\r\n      </Col>\r\n\r\n    </Row>\r\n  )\r\n}\r\n\r\nDashboard.propTypes = {\r\n  spinning: PropTypes.bool.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.any).isRequired\r\n}\r\n\r\nexport default Dashboard","/* eslint-disable react/prop-types */\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\nexport const AxisTickRotate = ({ x, y, payload }) => (\r\n  <g transform={`translate(${x},${y})`}>\r\n    <text x={0} y={0} dy={16} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-35)\">\r\n      {moment(payload.value, \"YYYY-MM-DD\").format('DD MMM')}\r\n    </text>\r\n  </g>\r\n)\r\n\r\nexport const MeasureDot = ({ cx, cy, payload: { measure } }) => (\r\n  <circle\r\n    cx={cx} cy={cy} r={4} strokeWidth={1}\r\n    stroke={measure ? '#52c41a' : '#ff7300'}\r\n    fill={measure ? '#52c41a' : 'white'}\r\n  />\r\n)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card } from 'antd'\r\nimport { isFinite, round } from 'lodash'\r\nimport { Area, Bar, CartesianGrid, ComposedChart, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\r\nimport { convertDate } from '../../libs'\r\nimport { AxisTickRotate, MeasureDot } from './childcomps'\r\n\r\nconst domain = type => n => (\r\n  isFinite(n) ? round(n, -1) + (type === 'min' ? -10 : 10) : 0\r\n)\r\n\r\nconst tooltipsFormatter = (value, label) => {\r\n  const unit = { weight: ' kg', exercise: ' mins' }\r\n  return `${value} ${unit[label]}`\r\n}\r\n\r\nconst Graph = ({ data, selectDate }) => {\r\n\r\n  const onChartClick = ({ activeLabel }) => {\r\n    if(activeLabel){\r\n      selectDate(convertDate(activeLabel))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card style={{ marginTop: 16 }}>\r\n      <ResponsiveContainer width=\"95%\" height={400}>\r\n        <ComposedChart data={data} onClick={onChartClick}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <defs>\r\n            <linearGradient id=\"colorWeight\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop offset=\"5%\" stopColor=\"lightgreen\" stopOpacity={0.6}/>\r\n              <stop offset=\"95%\" stopColor=\"lightgreen\" stopOpacity={0}/>\r\n            </linearGradient>\r\n          </defs>\r\n          <Legend verticalAlign=\"top\" height={36} />\r\n          <Tooltip formatter={tooltipsFormatter}/>\r\n          <XAxis dataKey=\"date\" height={60} tick={<AxisTickRotate/>} />\r\n          <YAxis yAxisId=\"left\" domain={[domain('min'), domain('max')]} label={{ value: 'Weight  (kg)', angle: -90, position: 'insideLeft' }} />\r\n          <YAxis yAxisId=\"right\" orientation=\"right\" domain={[0, 120]} label={{ value: 'Exercise (mins)', angle: 90, position: 'insideRight' }} />\r\n          <Area dataKey=\"weight\" yAxisId=\"left\" type=\"monotone\" stroke=\"#ff7300\" fill=\"url(#colorWeight)\" dot={<MeasureDot />} />\r\n          <Bar dataKey=\"exercise\" yAxisId=\"right\" barSize={10} fill=\"#1890ff\"  />\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\nGraph.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  selectDate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Graph","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Col, Layout as AntLayout, Row } from 'antd'\r\nimport { Logo, MainContent, MainLayout, Panel, DividerTop, MainSider } from './styled'\r\nimport PanelDate from '../PanelDate'\r\nimport PanelWeight from '../PanelWeight'\r\nimport Dashboard from '../Dashboard'\r\nimport { gconf, project } from '../../config'\r\nimport Graph from '../Graph'\r\n\r\nconst Layout = props => {\r\n  const { selectedDate } = props\r\n\r\n  return (\r\n    <MainLayout>\r\n      <AntLayout>\r\n        <MainContent>\r\n          <Dashboard {...props} />\r\n          <Graph {...props} />\r\n        </MainContent>\r\n      </AntLayout>\r\n      <MainSider>\r\n        <Logo>\r\n          <Row type=\"flex\" justify=\"space-between\" >\r\n            <Col span={16}>{project.projectName}</Col>\r\n            <Col span={8}>\r\n              <Button type=\"link\" icon=\"file\" href={`https://docs.google.com/spreadsheets/d/${gconf.sheetID}`} target=\"_blank\" />\r\n              <Button type=\"link\" icon=\"facebook\" href={project.facebookLink} target=\"_blank\" />\r\n              <Button type=\"link\" icon=\"github\" href={project.githubRepo} target=\"_blank\" />\r\n            </Col>\r\n          </Row>\r\n        </Logo>\r\n        <Panel>\r\n          <PanelDate {...props} />\r\n          <DividerTop>{selectedDate.format('DD MMMM YYYY')}</DividerTop>\r\n          <PanelWeight {...props} />\r\n        </Panel>\r\n      </MainSider>\r\n    </MainLayout>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.any),\r\n  selectedDate: PropTypes.objectOf(PropTypes.any).isRequired\r\n}\r\n\r\nLayout.defaultProps = {\r\n  data: []\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { Spin } from 'antd'\r\nimport { fetchData, fetchTokenInfo } from '../../gapi'\r\nimport Layout from '../Layout'\r\nimport './style.css'\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    spinning: true,\r\n    isLogin: false,\r\n    selectedDate: moment(),\r\n    data: []\r\n  }\r\n\r\n  refetchAuth = async () => {\r\n    const { data: { expires_in = 0 } = {} }  = await fetchTokenInfo()\r\n    this.setState({ isLogin: expires_in > 0 })\r\n  }\r\n\r\n  refetchData = async () => {\r\n    const { data = [] } = await fetchData(this.state.isLogin)\r\n    this.setState({ data })\r\n  }\r\n\r\n  selectDate = date => {\r\n    this.setState({ selectedDate: date })\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.refetchAuth()\r\n    await this.refetchData()\r\n    this.setState({ spinning: false })\r\n  }\r\n\r\n  render() {\r\n    return <Spin tip=\"Fetching Data...\" spinning={this.state.spinning}>\r\n      <Layout\r\n        refetchAuth={this.refetchAuth}\r\n        refetchData={this.refetchData}\r\n        selectDate={this.selectDate}\r\n        {...this.state} />\r\n    </Spin>\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './comps/App/'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}